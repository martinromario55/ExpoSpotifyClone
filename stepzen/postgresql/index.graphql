type Favourites {
  id: ID!
  trackid: String
  userid: String

  track: TrackResponse
    @materializer(
      query: "getTrack"
      arguments: [{ name: "trackId", field: "trackid" }]
    )
}

"""
The following queries are just a set of examples of how to access your schema.
Feel free to modify them or aggregate more.
"""
type Query {
  " Queries for type 'Favourites' "
  favouritesByTrackid(trackid: String!): [Favourites]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "favourites"
      configuration: "postgresql_config"
    )
  favouritesByTrackidAndUserid(trackid: String!, userid: String!): [Favourites]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "favourites"
      configuration: "postgresql_config"
    )
  favouritesByUserid(userid: String!): [Favourites]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "favourites"
      configuration: "postgresql_config"
    )

  favouritesList: [Favourites]
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "favourites"
      configuration: "postgresql_config"
    )
  favouritesPaginatedList(first: Int, after: Int): [Favourites]
    @dbquery(
      type: "postgresql"
      schema: "public"
      query: """
      SELECT "id", "trackid", "userid" FROM "favourites" LIMIT $1 OFFSET $2
      """
      configuration: "postgresql_config"
    )
}

"""
The following mutations are just a set of examples of how to access your schema.
Feel free to modify them or aggregate more.
"""
type Mutation {
  " Mutations for type 'Favourites' "
  deleteFavourites(trackid: String!, userid: String!): Favourites
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "favourites"
      dml: DELETE
      configuration: "postgresql_config"
    )
  insertFavourites(trackid: String, userid: String): Favourites
    @dbquery(
      type: "postgresql"
      schema: "public"
      table: "favourites"
      dml: INSERT
      configuration: "postgresql_config"
    )
}
